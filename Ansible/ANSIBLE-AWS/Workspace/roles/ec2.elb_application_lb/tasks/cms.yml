---
- name: Create PHP API target group
  elb_target_group:
    name: "{{ '%03d'|format(aws_tags|int) }}-PHP-API-80"
    region: "{{ elb_region }}"
    state: "{{ elb_resource_state }}"
    tags:
      env: "{{ ec2_env }}"
    protocol: http
    port: 80
    vpc_id: "{{ elb_vpc_id }}"
    health_check_path: /
    successful_response_codes: "200"
    target_type: ip
    targets:
      - Id: "10.101.3.{{ aws_tags }}"
        Port: 80
  register: api_tg

- name: Create PHP Admin target group
  elb_target_group:
    name: "{{ '%03d'|format(aws_tags|int) }}-PHP-Admin-8888"
    region: "{{ elb_region }}"
    state: "{{ elb_resource_state }}"
    tags:
      env: "{{ ec2_env }}"
    protocol: http
    port: 8888
    vpc_id: "{{ elb_vpc_id }}"
    health_check_path: /
    successful_response_codes: "200"
    target_type: ip
    targets:
      - Id: "10.101.3.{{ aws_tags }}"
        Port: 8888
  register: admin_tg

- name: Create PHP Share target group
  elb_target_group:
    name: "{{ '%03d'|format(aws_tags|int) }}-PHP-Share-8881"
    region: "{{ elb_region }}"
    state: "{{ elb_resource_state }}"
    tags:
      env: "{{ ec2_env }}"
    protocol: http
    port: 8881
    vpc_id: "{{ elb_vpc_id }}"
    health_check_path: /
    successful_response_codes: "200"
    target_type: ip
    targets:
      - Id: "10.101.3.{{ aws_tags }}"
        Port: 8881
  register: share_tg

- name: Create CHAT Admin target group
  elb_target_group:
    name: "{{ '%03d'|format(aws_tags|int) }}-CHAT-Admin-9354"
    region: "{{ elb_region }}"
    state: "{{ elb_resource_state }}"
    tags:
      env: "{{ ec2_env }}"
    protocol: http
    port: 9354
    vpc_id: "{{ elb_vpc_id }}"
    health_check_path: /
    successful_response_codes: "200"
    target_type: ip
    targets:
      - Id: "10.101.3.{{ aws_tags }}"
        Port: 9354
  register: chat_admin_tg

- name: Create an ELB Application Load Balancer and attach CMS listener
  register: cms_alb
  elb_application_lb:
    name: "elb-{{ '%03d'|format(aws_tags|int) }}-CMS"
    region: "{{ elb_region }}"
    security_groups:
      - sg-052365812c2839d63
      - sg-0e7af62fc5731f960
    subnets: 
      - subnet-02535dd198e7106dc   # 1a
      - subnet-01bafabdad9be0103   # 1b
      - subnet-00c841cb6cff25494   # 1c
    idle_timeout: 600  #seconds
    tags:
      env: "{{ ec2_env }}"
    deletion_protection: true
    listeners:
      - Protocol: HTTPS
        Port: 443
        Certificates:
          - CertificateArn: "{{ elb_certificate_arn }}"
        SslPolicy: ELBSecurityPolicy-2016-08
        DefaultActions:
          - Type: forward
            TargetGroupName: "{{ api_tg.target_group_name }}"
      - Protocol: HTTP
        Port: 8088
        DefaultActions:
          - Type: forward
            TargetGroupName: "{{ admin_tg.target_group_name }}"
      - Protocol: HTTP
        Port: 8881
        DefaultActions:
          - Type: forward
            TargetGroupName: "{{ share_tg.target_group_name }}"
      - Protocol: HTTP
        Port: 9354
        DefaultActions:
          - Type: forward
            TargetGroupName: "{{ chat_admin_tg.target_group_name }}"
    state: "{{ elb_resource_state }}"
    wait: true

- name: Add http tp https redirect listener to ALB
  command: >
    aws elbv2 create-listener
    --region {{ elb_region }}
    --load-balancer-arn {{ cms_alb.load_balancer_arn }}
    --protocol HTTP
    --port 80
    --default-actions 'Type=redirect,RedirectConfig={Protocol=HTTPS,Port=443,Host="#{host}",Path="/#{path}",Query="#{query}",StatusCode=HTTP_301}'
