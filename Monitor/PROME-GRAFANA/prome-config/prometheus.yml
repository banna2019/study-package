# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).
  scrape_timeout: 15s
  #exteral_labels:
  # monitor: 'codelab_monitor'

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets: ['localhost:9093']
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"
   - "rules/node_rules.yml"
   - "rules/alertmanager_rules.yml"
   - "rules/node_alerts.yml"
#   - "rules/node_down.yml"
   - "rules/memory_over.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
    - targets: ['localhost:9090']

  - job_name: 'node'
    static_configs:
    - targets: ['localhost:9100','192.168.2.56:9100','192.168.2.58:9100']
    params:
      collect[]:
        - cpu
        - meminfo
        - diskstats
        - netdev
        - netstat
        - filefd
        - filesystem
        - xfs
        - systemd

  - job_name: 'cadvisor'
    static_configs:
      - targets: ['localhost:8080']
#    metric_relabel_configs: 
#      - source_labels: [__name__]
#        separator: ','
#        regex: '(container_tasks_state|container_memory_failures_total)'
#        action: drop


  - job_name: 'nginx'
    static_configs:
      - targets: ['192.168.2.56:9913']


  - job_name: 'mysql'
    static_configs:
      - targets: ['192.168.2.58:9104']
        labels:
          instance: my-db02 
